services:
  default:
    dnsRecord: true
    image: alpine:3.20
    networks:
      - challenge-network
  ports-specified:
    dnsRecord: true
    image: python:3.12-slim
    # Start TCP listner on both ports so checks in the test can recognise an available service
    command:
      [
        "sh",
        "-c",
        'python3 -m http.server "8080" --bind 0.0.0.0 & python3 -m http.server "9090" --bind 0.0.0.0 & wait',
      ]
    ports:
      - protocol: TCP
        port: 8080
    networks:
      - challenge-network
  ports-not-specified:
    dnsRecord: true
    image: python:3.12-slim
    # Start TCP listner on both ports so checks in the test can recognise an available service
    command:
      [
        "sh",
        "-c",
        'python3 -m http.server "8080" --bind 0.0.0.0 & python3 -m http.server "9090" --bind 0.0.0.0 & wait',
      ]
    networks:
      - challenge-network
  ports-specified-diff-network:
    dnsRecord: true
    image: python:3.12-slim
    # Start TCP listner on both ports so checks in the test can recognise an available service
    command:
      [
        "sh",
        "-c",
        'python3 -m http.server "8080" --bind 0.0.0.0 & python3 -m http.server "9090" --bind 0.0.0.0 & wait',
      ]
    ports:
      - protocol: TCP
        port: 8080
    networks:
      - other-network
  ports-specified-two-networks:
    dnsRecord: true
    image: python:3.12-slim
    command:
      [
        "sh",
        "-c",
        'python3 -m http.server "8080" --bind 0.0.0.0 & python3 -m http.server "9090" --bind 0.0.0.0 & wait',
      ]
    ports:
      - protocol: TCP
        port: 8080
    networks:
      - challenge-network
      - other-network
networks:
  challenge-network:
    driver: bridge
  other-network:
    driver: bridge
